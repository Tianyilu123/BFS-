
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        if(root == null)
            throw new IllegalArgumentException();
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        TreeNode ret = null;
        
        while(!queue.isEmpty()) {
            int size = queue.size();
            TreeNode firstNode = null;
            
            while(size-- >0) {
                TreeNode cur = queue.poll();
                if(firstNode == null) {
                    firstNode = cur;
                }
                if(cur.left != null) {
                    queue.offer(cur.left);
                }
                if(cur.right != null) {
                    queue.offer(cur.right);
                }
            }
            ret = firstNode;
        }
        return ret.val;
    }
}
